using StarfallAfterlife.Bridge.SfPackageLoader;
using StarfallAfterlife.Bridge.SfPackageLoader.SfTypes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Property = StarfallAfterlife.Bridge.Codex.SfCodexPropertyInfo;

namespace StarfallAfterlife.Bridge.Codex
{
    public partial class SfCodex
    {
        private static readonly IReadOnlyCollection<Property> _properties = new Property[]
        {
            Property.Create<float>("BaseArmorPoints", new("Armor", "Stats")),
            Property.Create<int>("Internal_ID"),
            Property.Create<string>("EquipmentLineupIndentity"),
            Property.Create<string>("xlsEquipmentQuality"),
            Property.Create<Dictionary<string, int>>("QualityData", uPropConverter: ConvertQualityData),
            Property.Create<float>("xlsEqStructurePoints", new("Structure", "Stats")),
            Property.Create<float>("xlsCooldownTime", new("Cooldown", "Stats")),
            Property.Create<float>("xlsEquipmentMass", new("Mass", "Stats")),
            Property.Create<int>("xlsIGCPrice"),
            Property.Create<int>("xlsTechPoints"),
            Property.Create<string>("BlueprintEqImage"),
            Property.Create<string>("BlueprintCardImage"),
            Property.Create<SfCodexTypes.ItemDropInfo[]>("DropItemsOnDisassemble", uPropConverter: ConvertDropItemsOnDisassemble),
            Property.Create<SfCodexTypes.ItemCountInfo[]>("RequiredItems", uPropConverter: ConvertRequiredItemCrafting),
            Property.Create<int>("IGCToProduce"),
            Property.Create<int>("ProductionPoints"),
            Property.Create<int>("ProjectToOpen", uPropConverter: ConvertPathToAssetId),
            Property.Create<int>("ProjectToOpenXp"),
            Property.Create<int>("RequiredProjectToOpenXp"),
            Property.Create<int>("ProductionPointsOnDisassemble"),
            Property.Create<bool>("bAllowManualParamsInput"),
            Property.Create<int>("StarfallItemId"),
            Property.Create<string[]>("DiscoveryItemTags"),
            Property.Create<SfCodexTextKey>("ItemShortName", uPropConverter: ConvertToTextKey),
            Property.Create<SfCodexTextKey>("ItemFullName", uPropConverter: ConvertToTextKey),
            Property.Create<SfCodexTextKey>("ItemShortDescription", uPropConverter: ConvertToTextKey),
            Property.Create<SfCodexTextKey>("ItemFullDescription", uPropConverter: ConvertToTextKey),
            Property.Create<int>("ItemTechLevel"),
            Property.Create<int>("MinGalaxyLvl"),
            Property.Create<int>("MaxGalaxyLvl"),
            Property.Create<float>("GalaxyValue"),
            Property.Create<int>("Width"),
            Property.Create<int>("Height"),
            Property.Create<float>("Cargo", new("Cargo", "Stats")),
            Property.Create<string>("Thumbnail"),
            Property.Create<string>("ArmorType"),
            Property.Create<float>("xlsRequiredCapacity", new("Capacity", "Stats")),
            Property.Create<bool>("ShowInCodex"),
            Property.Create<bool>("bCharacterBound"),
            Property.Create<string>("FlightUnitClass"),
            Property.Create<float>("xlsDamage", new("Damage", "Stats")),
            Property.Create<float>("xlsMaxRange", new("Range", "Stats")),
            Property.Create<float>("xlsProjectileSpeed"),
            Property.Create<float>("xlsMaxAimingError", new("HorizontalSpread", "Stats")),
            Property.Create<string[]>("EquipmentTags"),
            Property.Create<float>("xlsOnDestructionExplodeDamage"),
            Property.Create<float>("Duration", new("Duration", "Stats")),
            Property.Create<bool>("UseAllAtOnce"),
            Property.Create<string>("xlsEquipmentType"),
            Property.Create<bool>("xlsIsActiveEquipment"),
            Property.Create<bool>("xlsIsSpecialEquipment"),
            Property.Create<bool>("xlsIsEquipmentDestructable"),
            Property.Create<float>("xlsOnDestructionExplodeChance"),
            Property.Create<float>("ShootRange", new("Range", "Stats")),
            Property.Create<float>("ProjectileSpeed", new("PROJECTILESPEED", "Codex")),
            Property.Create<float>("Damage", new("Damage", "Stats")),
            Property.Create<float>("Radius", new("Radius", "Stats")),
            Property.Create<float>("InterferenceChance"),
            Property.Create<string>("UsageInputType"),
            Property.Create<bool>("BreakShipStealth"),
            Property.Create<float>("ShieldSegmentRegenValue", new("RGN", "Equipment")),
            Property.Create<int>("DroneNumber", new("C54DDB0C4C7E63C3563014B5BA587712")),
            Property.Create<UProperty[]>("AIActions"),
            Property.Create<float>("Area", new("RNG", "Equipment")),
            Property.Create<float>("Range", new("Range", "Equipment")),
            Property.Create<float>("WallMaxWidth", new("LENGTH", "Codex")),
            Property.Create<int>("BarriersNumber", new("Radius", "Stats")),
            Property.Create<float>("Capacity", new("Capacity", "Stats")),
            Property.Create<float>("RepairPoints", new("RPR", "Equipment")),
            Property.Create<float>("RepairTime", new("Duration", "Equipment")),
            Property.Create<float>("ManeuverabilityIncrease"),
            Property.Create<float>("ShieldDamageMultiplier"),
            Property.Create<float>("CooldownDecreasePerTime"),
            Property.Create<string>("Race"),
            Property.Create<int>("BGCPrice"),
            Property.Create<float>("ShieldPoints", new("Shield", "Stats")),
            Property.Create<float>("Period", new("Cooldown", "Equipment")),
            Property.Create<int>("ChargesPerRound", new("ROUNDS", "Equipment")),
            Property.Create<float>("RegenShieldPerTime", new("13115263448AF25EAB89129835CB8CCA", "Equipment")),
            Property.Create<string>("ActivationMethod"),
            Property.Create<float>("ModuleDamage", new("DMG", "Equipment")),
            Property.Create<int>("Pods", new("6774327C435CA6C4B9D1F4AAA17C59F9", "Equipment")),
            Property.Create<float>("UsageTime", new("7714F95B4664A98A362B359A2E4E11E8", "Equipment")),
            Property.Create<float>("SubMissileDamage", new("DMG", "Equipment")),
            Property.Create<int>("DamagePerSecond", new("DamagePerSecond", "Shipyard")),
            Property.Create<float>("DamageInterval", new("3F9E068A4299EC549E081FB95C034FC7", "Equipment")),
            Property.Create<float>("JumpRange", new("40FC81784B2DA364256AADB455416802", "Equipment")),
            Property.Create<float>("ApplyRadius", new("RNG", "Equipment")),
            Property.Create<bool>("IsPersonalWarp"),
            Property.Create<bool>("Floating"),
            Property.Create<int>("MaxCharges", new("6678094E4433FD2331E06FAFC9A7106B", "Equipment")),
            Property.Create<float>("timeIsActive", new("7714F95B4664A98A362B359A2E4E11E8", "Equipment")),
            Property.Create<int>("ModuleRange", new("RNG", "Equipment")),
            Property.Create<float>("BeamSpeed", new("PROJECTILESPEED", "Codex")),
            Property.Create<float>("damageModifierSelf", new("7E405D4E44BD74D063EBBFA50800DCE3", "Equipment")),
            Property.Create<float>("timeToCharge", new("05D05F0444418EEFC170A99F62D9E7BA", "Equipment")),
            Property.Create<float>("chargeImpulseForce", new("Acceleration", "Stats")),
            Property.Create<float>("ramDumping", new("DeccelerationSpeed", "Stats")),
            Property.Create<float>("RepairPerSecond", new("D822455444CF63E9D96613AC1D2E1033", "Equipment")),
            Property.Create<float>("SAmount", new("9154B1CB45669EDB72C990B91B854574", "Equipment")),
            Property.Create<bool>("UseOnMyShips"),
            Property.Create<float>("ShipStructurePenaltyDamage", new("PNL", "Equipment")),
            Property.Create<float>("ShipImpulseRadius", new("F25FDE7047E1B29128A37CBDB0EF00CF", "Equipment")),
            Property.Create<float>("ImpulseStrength", new("Acceleration", "Stats")),
            Property.Create<float>("InUseTime", new("7714F95B4664A98A362B359A2E4E11E8", "Equipment")),
            Property.Create<float>("MaxDetectionShipSpeed", new("SPD", "Equipment")),
            Property.Create<float>("DetectionRange", new("Radius", "Equipment")),
            Property.Create<float>("ActivationTimer", new("05D05F0444418EEFC170A99F62D9E7BA", "Equipment")),
            Property.Create<int>("RoundPerUsage", new("RoundsPerUsage", "Equipment")),
            Property.Create<float>("timeToDump", new("7714F95B4664A98A362B359A2E4E11E8", "Equipment")),
            Property.Create<float>("RepairPointsPerDrone", new("RPR", "Equipment")),
            Property.Create<float>("RepairTimePerDrone", new("7714F95B4664A98A362B359A2E4E11E8", "Equipment")),
            Property.Create<float>("WarpArea", new("RNG", "Equipment")),
            Property.Create<float>("AreaRange", new("AreaRange", "Equipment")),
            Property.Create<float>("PhaseRetreatImpulseStrength", new("Acceleration", "Stats")),
            Property.Create<float>("PercentageRepairOfDamage", new("DFFF35584FC9CCF437367398861DCC89")),
            Property.Create<float>("RepairPerTime", new("RPR", "Equipment")),
            Property.Create<float>("TimeToRepair", new("Duration", "Equipment")),
            Property.Create<float>("Cooldown", new("Cooldown", "Equipment")),
            Property.Create<float>("ShieldDamagePerTime", new("RGN", "Equipment")),
            Property.Create<float>("TimeToDamage", new("3F9E068A4299EC549E081FB95C034FC7", "Equipment")),
            Property.Create<bool>("IsDefaultEquipment"),
            Property.Create<float>("MinerPoints", new("DMG", "Equipment")),
            Property.Create<int>("MinerDronesCount", new("7B42ECA64F062806D6FAA1806C301A61", "Equipment")),
            Property.Create<float>("RadiusDetectResourceNodes", new("387BE4074DFB2A391F47A48B2B36AF64", "Equipment")),
            Property.Create<int>("SalvageDronesCount", new("7B42ECA64F062806D6FAA1806C301A61", "Equipment")),
            Property.Create<int>("ObjectFSM"),
            Property.Create<int>("CargoHoldSize", new("CargoCapacity", "Shipyard")),
            Property.Create<SfCodexTypes.HardpointComponent[]>("HullHardpoints", isHidden: true),
            Property.Create<float>("HullShieldRegen", new("ShieldRegen", "Shipyard")),
            Property.Create<float>("HullBaseAcceleration", new("AccelerationSpeed", "Stats")),
            Property.Create<float>("HullBaseDecceleration", new("DeccelerationSpeed", "Stats")),
            Property.Create<int>("HullWarpPoints", new("CD526F1040A38294F74AC2819F70992A", "UI")),
            Property.Create<float>("HullMass", new("Mass", "Stats")),
            Property.Create<float>("HullMobilityFactor"),
            Property.Create<float>("HullSpeedValue"),
            Property.Create<float>("HullVitalityFactor"),
            Property.Create<float>("HullMobilityVitality"),
            Property.Create<float>("BaseShieldRegenRate", new("ShieldRegen", "Stats")),
            Property.Create<float>("BaseShieldPoints", new("Shield", "Stats")),
            Property.Create<string>("Segment"),
            Property.Create<float>("xlsDurationTime", new("Duration", "Stats")),
            Property.Create<string>("WeaponDamageDistanceDependence"),
            Property.Create<string>("ModIcon"),
            Property.Create<float>("xlsWeaponChargeTime", new("05D05F0444418EEFC170A99F62D9E7BA", "Equipment")),
            Property.Create<bool>("HasChargingTime"),
            Property.Create<float>("HeatDamageDivider", new("NormalDamageDivider", "Stats")),
            Property.Create<float>("HeatingTime", new("HeatingTime", "Stats")),
            Property.Create<float>("CoolingTime"),
            Property.Create<float>("xlsProjectileLifeTime", new("3F9E068A4299EC549E081FB95C034FC7", "Equipment")),
            Property.Create<bool>("bCanHealAlly"),
            Property.Create<float>("HealFactor"),
            Property.Create<int>("xlsShootsPerUsage", new("ShootsPerSalvo", "Stats")),
            Property.Create<float>("xlsShootsPeriod"),
            Property.Create<float>("xlsShootsHorizontalSpread", new("HorizontalSpread", "Stats")),
            Property.Create<float>("ArmorCorrosiveDamagePercent"),
            Property.Create<float>("xlsArmorPenetrationChance", new("ArmorPenetrationChance", "Stats")),
            Property.Create<float>("xlsShieldPenetrationChance", new("ShieldPenetrationChance", "Stats")),
            Property.Create<float>("OverclockingTime", new("HeatingTime", "Stats")),
            Property.Create<float>("ShootingPeriodTime", new("Cooldown", "Equipment")),
            Property.Create<float>("SectorDamage"),
            Property.Create<float>("SectorRange"),
            Property.Create<float>("SectorAngle"),
            Property.Create<float>("ShootTime"),
            Property.Create<int>("SectorNum"),
            Property.Create<float>("FunnelHitEffectBaseSize"),
            Property.Create<float>("HalfAngle"),
            Property.Create<float>("SqrCurrentRange"),
            Property.Create<string>("HullClass"),
            Property.Create<int>("TechLevel", new("TechLevel", "Common")),
            Property.Create<SfCodexTextKey>("ShipShortDescription", uPropConverter: ConvertToTextKey),
            Property.Create<SfCodexTextKey>("HullFullDiscription", uPropConverter: ConvertToTextKey),
            Property.Create<float>("HullStructure", new("Structure", "Stats")),
            Property.Create<float>("HullArmor", new("Armor", "Stats")),
            Property.Create<float>("HullShieldPoints", new("Shield", "Stats")),
            Property.Create<float>("HullCapacity", new("Capacity", "Stats")),
            Property.Create<float>("HullIGCPrice"),
            Property.Create<float>("HullBaseMaxSpeed", new("MaxSpeed", "Stats")),
            Property.Create<float>("HullBaseAngularSpeed", new("AngularSpeed", "Stats")),
            Property.Create<int>("HullFullRepairTime"),
            Property.Create<int>("IGCForConstruction"),
            Property.Create<int>("MinutesOnConstruction"),
            Property.Create<SfCodexTextKey>("m_ShipName", uPropConverter: ConvertToTextKey),
            Property.Create<string>("ProgressionTreeClass", uPropConverter: ConvertPathToClassName),
            Property.Create<bool>("bFactionReward"),
            Property.Create<int>("HullCargoHoldSize", new("Cargo space", "Stats")),
            Property.Create<bool>("ProjectIsDefaultOpen"),
            Property.Create<float>("MaxRoll"),
            Property.Create<SfCodexTextKey>("ShipClassName", uPropConverter: ConvertToTextKey),
            Property.Create<string>("ShipFaction"),
            Property.Create<FVector>("LiveRenderOffset"),
            Property.Create<int>("EntityLimit"),
            Property.Create<UProperty[]>("DefaultEquipment"),
            Property.Create<float>("XPGainMultiplier"),
            Property.Create<int>("BaseIGCPrice"),
            Property.Create<float>("MinIGCPrice"),
            Property.Create<float>("MaxIGCPrice"),
            Property.Create<bool>("bConsumeItemOnUseInBattle"),
            Property.Create<int>("ProjectID"),
            Property.Create<int>("ProductCount"),
            Property.Create<int>("SecondsToProduce"),
        };

        public static IReadOnlyDictionary<string, Property> Properties => _propertiesLazy.Value;

        private static readonly Lazy<IReadOnlyDictionary<string, Property>> _propertiesLazy = new(() =>
            _properties.ToDictionary(p => p.Name));


        public static Property GetPropertyInfo(string propertyName) =>
            propertyName is null ? null : Properties.GetValueOrDefault(propertyName);
    }
}
